// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static final FirebaseOptions web = FirebaseOptions(
    //apiKey: 'AIzaSyD1FlglgmMi7MHW_eTlY-ANNy0MeRvZI3U',
    apiKey: dotenv.env['API_KEY'] ?? '',
    appId: dotenv.env['APP_ID'] ?? '',
    messagingSenderId: '998282615273',
    projectId: 'myfirst-ec363',
    authDomain: 'myfirst-ec363.firebaseapp.com',
    storageBucket: 'myfirst-ec363.firebasestorage.app',
    measurementId: 'G-XBGKNPL8KF',
  );

  static final FirebaseOptions android = FirebaseOptions(
    apiKey: dotenv.env['API_KEY'] ?? '',
    appId: dotenv.env['APP_ID'] ?? '',
    messagingSenderId: '998282615273',
    projectId: 'myfirst-ec363',
    storageBucket: 'myfirst-ec363.firebasestorage.app',
  );

  static final FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.env['API_KEY'] ?? '',
    appId: dotenv.env['APP_ID'] ?? '',
    messagingSenderId: '998282615273',
    projectId: 'myfirst-ec363',
    storageBucket: 'myfirst-ec363.firebasestorage.app',
    androidClientId:
        '998282615273-cf7ikp3kb29g8trmq6etcut1rlaa3emt.apps.googleusercontent.com',
    iosClientId:
        '998282615273-fgqnggb9co7fu73usbvofn6t4g57155d.apps.googleusercontent.com',
    iosBundleId: 'com.example.trial',
  );

  static final FirebaseOptions macos = FirebaseOptions(
    apiKey: dotenv.env['API_KEY'] ?? '',
    appId: dotenv.env['APP_ID'] ?? '',
    messagingSenderId: '998282615273',
    projectId: 'myfirst-ec363',
    storageBucket: 'myfirst-ec363.firebasestorage.app',
    androidClientId:
        '998282615273-cf7ikp3kb29g8trmq6etcut1rlaa3emt.apps.googleusercontent.com',
    iosClientId:
        '998282615273-fgqnggb9co7fu73usbvofn6t4g57155d.apps.googleusercontent.com',
    iosBundleId: 'com.example.trial',
  );

  static final FirebaseOptions windows = FirebaseOptions(
    apiKey: dotenv.env['API_KEY'] ?? '',
    appId: dotenv.env['APP_ID'] ?? '',
    messagingSenderId: '998282615273',
    projectId: 'myfirst-ec363',
    authDomain: 'myfirst-ec363.firebaseapp.com',
    storageBucket: 'myfirst-ec363.firebasestorage.app',
    measurementId: 'G-41S0TRV7PN',
  );
}
